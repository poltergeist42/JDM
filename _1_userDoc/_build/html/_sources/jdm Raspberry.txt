========================
*** jdm Raspberry PI ***
========================

------------------
Table des matières
------------------

#. `Raspberry`_
    #. `RPi utilisés`_
        #. `Model 2 (ID-FIX)`_
        #. `RPI ROV`_
        
    #. `Acceder au fichier de configuration du RPI`_
    #. `Connaitre la configuration matériel du RPI`_
    #. `Vocabulaire`_
    #. `La bibliotheque RPi.GPIO`_
        #. `Implentation RPi2`_
        #. `Installation de RPi.GPIO`_
        #. `Utilisation de RPi.GPIO avec Python`_
        
    #. `I2C`_
        #. `Installation / Activation de l'I2C`_
        #. `Connaitre l'adresse des matétiels branchés`_
        
    #. `UART`_
        #. `Libérer l'UART`_
        
    #. `PWM, Servo moteur et DC Motor`_
    
#. `PYTHON`_
    #. `Obtenir de l'aide sur une class ou une méthode (python)`_
    #. `Lignes de code à insérer au debut de chaque script sous linux`_
    #. `os library`_
    #. `pip`_
        #. `Installation de PIP`_
        #. `Utilisation de PIP`_
        
    #. `Les environnements virtuels Python : virtualenv et virtualenvwrapper`_
        #. `installation des environements virtuels`_
        #. `configuration des environements virtuels`_
        #. `Utilisation environements virtuels`_
        
    #. `Un shell Python qui fait de l'auto completion`_
    #. `convertir un string en bytes`_
    #. `faire un executable à partir d'un script`_
    #. `Fichiers de configuration (.ini)`_
    #. `DocUtils ; reStructuredText (.rst) ; Sphinx`_
        #. `DocUtils`_
        #. `reStructuredText (.rst)`_
        
#. `LINUX`_
    #. `rappel des commandes de bases`_
    #. `rappel des raccourcis de navigation dans le shell`_
    #. `activer le compte root`_
    #. `connaitre la version du systeme`_
        #. `installation de lsb-release`_
        #. `utilisation de lsb-release`_
        
    #. `connaitre la version d'un paquet`_
        #. `installation de apt-show-versions`_
        #. `utilisation de apt-show-versions`_
        
    #. `Pour copier des fichiers en root depuis l'interface graphique`_
    #. `pour passer la langue et le clavier en francais`_
    #. `Pour rendre un fichier "Executable"`_
    #. `Pour pouvoir se connecter en RDP sur un poste Linux`_
    #. `pour faire du XForwarding`_
    #. `Pour mettre une IP fixe sur une interfaces réseau`_
    #. `Pour active le WIFI`_
    #. `Se connecter a un reseau wifi en ligne de commande`_
    #. `Connaitre la liste des matériel usb`_
    #. `Connaitre l'éspace disque utilise et celui disponible`_
    #. `Les posrts séries`_
        #. `Connaitre la liste des ports série :`_
        #. `interoger le journal sur les ports série :`_
        
    #. `faire du multi-screen sur une fenêtre terminal`_
        #. `Installation de screen`_
        #. `Lancer l'application "screen"`_
        #. `Liste des commandes des bases pour screen`_
        #. `pour créer un script qui s'execute au démarrage du sytème`_
            #. `Préparation du script shell`_
            #. `Préparation du script python`_
            
#. `GIT`_
    #. `Configurer GIT`_
    #.  `Obtenir de l'aide`_
    #. `Démarrer un dépôt Git`_
    #. `Enregistrer des modifications dans le dépôt`_
    #. `Creer, lister et selectionner une branche`_
    #. `appliquer le contenu d'une branch dans la branch courante (faire un merge)`_
    #. `suprimer des éléments`_
    #. `annuler / remplacer le dernier commit`_
    #. `github`_
    
#. `Composants Spécifiques`_
    #. `Magnetomettre : HMC5883L`_
        #. `Implentation HMC5883L`_
        #. `Installation des librairies quick2wire et i2clibraries`_
        #. `Configuration du HMC5883L`_
    
    #. `Motteur Pas à Pas : 28BYJ-48`_
        #. `Specification du PAP`_
        #. `Correspodanse entre le driver et les GPIO`_
        #. `Phases`_
        #. `Organisation des phases en python3`_
        
    #. `Picamera`_
        #. `Activation du module caméra sur le RPi`_
        #. `installation de la camera`_
        #. `Instalation de la librairie PiCamera`_
        #. `utilisation avec python`_
        
    #. `Capteur ultrason : HC-SR04`_   
        #. `Vocabulaire et definission pour le HC-SR04`_
        #. `Specification du HC-SR04`_
    
------------------------------------------------------------------------------------------

---------
Raspberry
---------

RPi utilisés
------------

Model 2 (ID-FIX)
~~~~~~~~~~~~~~~~

    ::

      NAME                  : RPi2pierre
      MAC address ETH       : b8:27:eb:65:13:5a
      IP                    : 172.16.32.253
      netmask               : 255.255.255.0

      MAC Address WLAN      : 08:86:3b:6b:4d:58
                            : eth.addr == 08:86:3b:6b:4d:58
                                         # filtre a appliquer dans Wireshark
      login                 : pi
      password              : raspberry

      loginRoot             : root
      password              : raspberry

      xrdp                  : activé

------------------------------------------------------------------------------------------

RPI ROV
~~~~~~~
    ::

      NAME                  : rpiRov
      MAC address ETH       : b8:27:eb:e0:4b:93
      IP                    : 
      netmask               : 

      MAC Address WLAN      : 
                            : eth.addr == d8:eb:97:1c:3e:b4
                                        # filtre a appliquer dans Wireshark
      login                 : pi
      password              : raspberry

------------------------------------------------------------------------------------------

Acceder au fichier de configuration du RPI
------------------------------------------
    ::
    
        sudo raspi-config

------------------------------------------------------------------------------------------

Connaitre la configuration matériel du RPI
------------------------------------------

  :CPU:                 * cat /proc/cpuinfo

------------------------------------------------------------------------------------------

Vocabulaire
-----------

HAT (Chapeau)
            C'est le nom que porte les cartes filles sur Raspberry Pi.
            Sur Arduino, cela s'appel un Shield (Bouclier)

------------------------------------------------------------------------------------------

La bibliotheque RPi.GPIO
------------------------

:liens Web:
            * https://pypi.python.org/pypi/RPi.GPIO
            * http://sourceforge.net/projects/raspberry-gpio-python/
            * http://sourceforge.net/p/raspberry-gpio-python/wiki/Home/
            * http://deusyss.developpez.com/tutoriels/RaspberryPi/PythonEtLeGpio/
                    
Implentation RPi2
~~~~~~~~~~~~~~~~~

    +-------+--------+---------------+---------+---------------+--------+-------+
    | Board |  BCM   |     Def       |  PINS   |      Def      |  BCM   | Board |
    +=======+========+===============+====+====+===============+========+=======+
    |       | 3.3v   | DC power      | 01 | 02 | DC power      | 5v     |       |
    +-------+--------+---------------+----+----+---------------+--------+-------+
    |   8   | GPIO02 | i2c SDA       | 03 | 04 | DC power      | 5v     |       |
    +-------+--------+---------------+----+----+---------------+--------+-------+
    |   9   | GPIO03 | i2c SCL       | 05 | 06 | Ground        | GND    |       |
    +-------+--------+---------------+----+----+---------------+--------+-------+
    |   7   | GPIO04 | GPIO_GCLK     | 07 | 08 | TXD0          | GPIO14 |  15   |
    +-------+--------+---------------+----+----+---------------+--------+-------+
    |       | GND    | Ground        | 09 | 10 | RXD0          | GPIO15 |  16   |
    +-------+--------+---------------+----+----+---------------+--------+-------+
    |   0   | GPIO17 | GPIO_Gen0     | 11 | 12 | GPIO_Gen1     | GPIO18 |  1    |
    +-------+--------+---------------+----+----+---------------+--------+-------+
    |   2   | GPIO27 | GPIO_Gen2     | 13 | 14 | Ground        | GND    |       |
    +-------+--------+---------------+----+----+---------------+--------+-------+
    |   3   | GPIO22 | GPIO_Gen3     | 15 | 16 | GPIO_Gen4     | GPIO23 |  4    |
    +-------+--------+---------------+----+----+---------------+--------+-------+
    |       | 3.3v   | DC power      | 17 | 18 | GPIO_Gen5     | GPIO24 |  5    |
    +-------+--------+---------------+----+----+---------------+--------+-------+
    |   12  | GPIO10 | SPI_MOSI      | 19 | 20 | Ground        | GND    |       |
    +-------+--------+---------------+----+----+---------------+--------+-------+
    |   13  | GPIO09 | SPI_MISO      | 21 | 22 | GPIO_Gen6     | GPIO25 |  6    |
    +-------+--------+---------------+----+----+---------------+--------+-------+
    |   14  | GPIO11 | SPI_CLK       | 23 | 24 | SPI_CE0_N     | GPIO08 |  10   |
    +-------+--------+---------------+----+----+---------------+--------+-------+
    |       | GND    | Ground        | 25 | 26 | SPI_CE1_N     | GPIO07 |  11   |
    +-------+--------+---------------+----+----+---------------+--------+-------+
    |       | ID_SD  | i2c ID EEPROM | 27 | 28 | i2c ID EEPROM | ID_SC  |       |
    +-------+--------+---------------+----+----+---------------+--------+-------+
    |   21  | GPIO05 |               | 29 | 30 | Ground        | GND    |       |
    +-------+--------+---------------+----+----+---------------+--------+-------+
    |   22  | GPIO06 |               | 31 | 32 |               | GPIO12 |  26   |
    +-------+--------+---------------+----+----+---------------+--------+-------+
    |   23  | GPIO13 |               | 33 | 34 | Ground        | GND    |       |
    +-------+--------+---------------+----+----+---------------+--------+-------+
    |   24  | GPIO19 |               | 35 | 36 |               | GPIO16 |  27   |
    +-------+--------+---------------+----+----+---------------+--------+-------+
    |   25  | GPIO26 |               | 37 | 38 |               | GPIO20 |  28   |
    +-------+--------+---------------+----+----+---------------+--------+-------+
    |       | GND    | Ground        | 39 | 40 |               | GPIO21 |  29   |
    +-------+--------+---------------+----+----+---------------+--------+-------+

Installation de RPi.GPIO
~~~~~~~~~~~~~~~~~~~~~~~~

        **1.**   si RPi.GPIO n'est pas installer, saisir
            ::
            
                pip install RPi.GPIO
            
            Pour mettre à jour la bibliothèque
            
            ::
            
                pip install RPi.GPIO -- upgrade


Utilisation de RPi.GPIO avec Python
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

        **2.1.** Importer la bibliotheque
            ::
            
                import RPi.GPIO as GPIO
                    # Attention, c'est bien RPi avec un i minuscule

        **2.2.** Choisir la notation pour accèder au broche du GPIO.
        
            * Il y a 2 façon d'adresser les broches du GPIO, soit par sont numéro
              de broche (GPIO.BOARD) soit par son nom dans le registre (GPIO.BCM).
              C'est la methode ".setmode()" qui permet de configurer le mode de
              fonctionnement des GPIO.

------------------------------------------------------------------------------------------

I2C
---

:liens Web:
            * http://www.instructables.com/id/Interfacing-Digital-Compass-HMC5883L-with-Raspberr/
            * http://elinux.org/RPi_ADC_I2C_Python
            * http://www.bitflippersanonymous.com/raspberry-pi-projects/i2c-temperature
                # exemple pour un capteur de température i2c
                                                
            * http://mchobby.be/wiki/index.php?title=ArduPi-I2C-Support
                # Exemple de comunication en i2c entre un RPi et un arduino
                en utilisant quick2wire.i2c
                                                
                    
:Ref:  
            * Livre (papier) Raspberry Pi2, page 558.
            * Chapitre 14, Section 2.3, paragraphe 2.3.3 : installation de la carte
                    
Installation / Activation de l'I2C
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

        **1.1.** Entrée dans le fichier de config du rpi
            * sudo raspi-config
                + 9 Advanced Options
                    - A7 I2C
                        
                    [YES], [YES], [Finish]
        
        **1.2.** Ajouter une entrée dans le fichier "modules"

            * sudo nano /etc/modules
                + ajouter : i2c-dev
                + Sauvegarder et quitter
        
        **1.3.** Ajouter les paquets nécessaires
            * sudo apt-get install i2c-tools
            * sudo apt-get install python-smbus

        **1.4.** Redémarer le rpi
            * sudo reboot
                
        **1.5.** Ajouter l'utilisateur courant au groupe i2c
            * sudo adduser $USER i2c
                    
Connaitre l'adresse des matétiels branchés
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
            
        **2.1.** se placer dans le dossier modprob.d
            * cd /etc/modprobe.d/
                
        **2.2.** executer la commande i2cdetect avec des droits éléver
            * sudo i2cdetect -y 1
    
        Exemple avec un magnetometre HMC5883L :
        ::

            pi@raspiBlanc ~ $ cd /etc/modprobe.d/
            pi@raspiBlanc /etc/modprobe.d $ sudo i2cdetect -y 1
                 0  1  2  3  4  5  6  7  8  9  a  b  c  d  e  f
            00:          -- -- -- -- -- -- -- -- -- -- -- -- --
            10: -- -- -- -- -- -- -- -- -- -- -- -- -- -- 1e --
            20: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --
            30: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --
            40: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --
            50: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --
            60: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --
            70: -- -- -- -- -- -- -- --

------------------------------------------------------------------------------------------

UART
----

Libérer l'UART
~~~~~~~~~~~~~~
    
    **N.B :** par défaut l'uart est configuré en mode console pour le débug. pour l'utiliser,
    il faut d'abord le libérer.
    
        **1.**  Intérroger le journal sur les dernier événement de la liaison série pour vérifier
        que l'opération n'a pas déjà été effectuer
        
            ::
            
                dmesg | grep tty
            
            si l'opération n'a pas encore été effectuer, le résultat obtenu doit être :

            ::

                [    0.002072] console [tty1] enabled
                [    0.195363] 3f201000.uart: ttyAMA0 at MMIO 0x3f201000 (irq = 83, base_baud = 0) is a PL011 rev2
                [    0.695429] console [ttyAMA0] enabled

            
        **2.1.** configurer l'UART avec l'outil de configuration du Rpi
            ::
        
                sudo raspi-config
            
            
        **2.2.** se déplacer dans les menu selon la séquence suivante
            ::
        
                [ 8 ] --> [ A8] --> [ Non ]
            
            Le quatrième écran vous informe que Serial est maintenant désactivé
            ::
            
                [ Ok ] --> [ Finish ]
            
        **2.3.** Redémarer
            ::
        
                sudo reboot
            
        **3.**  Vérifier dans le journal que l'opération a bien été prise en compte
            ::
        
                demsg | grep tty
            
            ce qui doit vous donner le résultat suivant :
            
            ::
            
                [    0.002051] console [tty1] enabled
                [    0.195175] 3f201000.uart: ttyAMA0 at MMIO 0x3f201000 (irq = 83, base_baud = 0) is a PL011 rev2

            On constate que la derniere ligne à disparue, le mode debug sur la sortie UART
            est donc bien désactivée.

------------------------------------------------------------------------------------------

PWM, Servo moteur et DC Motor
-----------------------------

:liens Web:
            * https://fr.wikipedia.org/wiki/Modulation_de_largeur_d'impulsion
                # La page wikipedia sur la Modulation de Largeur d'Impulsion   
                (Pulse Width Modulation -- PWM)

            * http://deusyss.developpez.com/tutoriels/RaspberryPi/PythonEtLeGpio/#LIII-B-7
                # utilisation du PWM sur raspberry (en francais)
                        
            * https://www.youtube.com/watch?v=BLtV0Z38S94
                # utilisation du PWM sur raspberry (video)
                        
            * https://www.youtube.com/watch?v=ddlDgUymbxc
                # utilisation du servo moteur avec le RPi (video)
                        
            * https://www.youtube.com/watch?v=v2jpnyKPH64
                # principe de fonctionnement d'un servo moteur (video)
                        
            * https://www.youtube.com/watch?v=W7cV9_W12sM
                # utilisation d'un DC Motor avec le Pi (video)
        
    **1.** utilisation general du PWM / PFM
        Exemple d' utilisation (en python 3) :
        
        ::
        
            [ debut de script ]
                import RPI.GPIO as GPIO
                    # importation de la bibliotheque RPI
                GPIO.setmode(GPIO.BCM)
                    # Utilisation des GPIO en mode "BCM"
                
                une_broche_du_pi = 25
                GPIO.setup(une_broche_du_pi, GPIO.OUT)
                    # On choisi la sur la quelle on veut faire du PWM
                    # Il vaut mieu eviter de choisir une broche qui est aussi utilisee
                    # pour autre chose comme de l'I2C, du SPI ou du serial
                
                frequence = 50
                rapportCyclique = 50
                
                p = GPIO.PWM(une_broche_du_pi, frequence)
                    # on initialise le PWM sur la broche choisie et on indique la frequence
                    
                p.start(rapportCyclique)
                    # On l'impulsion en indiquant le rapport cyclique (Duty Cycle)
                    #
                    # Le rapport cyclique correspond au rapport de la durée de l'impultion
                    # sur la periode. Cette valeur est exprimée en pourcentage
                    # voir https://fr.wikipedia.org/wiki/Rapport_cyclique_d'ouverture
                
                rapportCyclique = 80
                p.ChangeDutyCycle(rapportCyclique)
                    # pour changer le rapport cyclique "a la volee", on utilise
                    # la methode RPI.GPIO.PWM.ChangeDutyCycle()
                
                frequence = 100
                p.ChangeFrequency(frequence)
                    # On peut changer la frequence "a la volee". On parle alors de PFM
                    # on utilise la methode RPI.GPIO.PWM.ChangeFrequency()
                    
                p.stop()
                    # on arrete l'impulsion
                    
                GPIO.cleanup()
                    # on libere toutes les GPIO
            [fin de script ]
            
    **2.** servo moteur :
        La periode pour un servo moteur est generalement de 20ms
        (a controler avec la documentation). les angles : 0 ; 90 ; 180 son généralement
        associes a des duree d'impulsion de 0.5 ; 1.5 ; 2.5 ms ce qui donne les rapports cycliques
        (duty cycle) suivants :
        
        ::
        
            0.5/20 = 2.5%
            1.5/20 = 7.5%
            2.5/20 = 12.5 %
        
        L'ensemble des valeurs de 0 a 180° son donc comprisent entre 0.5 et 2.5 ms soit
        entre 2.5% et 12.5%.
        
    **3.** DC motor :
        Le rapport cyclique permet de gérer la vitesse du moteur(valeur de 0 à 100).
        Il est préférable d'utiliser 2 broches PWM pour gerer le sens de rotation.
        
        +-+-+--+----------------------+
        | A | B|      Actions         |
        +===+==+======================+
        | 0 | 0| rotation off         |
        +---+--+----------------------+
        | 0 | 1| rotation on (sens 1) |
        +---+--+----------------------+
        | 1 | 0| rotation on (sens 2) |
        +---+--+----------------------+
        | 1 | 1| rotation off         |
        +-+-+--+----------------------+
        
        La frequence est a adapter en fonction du bruit du moteur
        (quant il "chante", c'est pas bon)

------------------------------------------------------------------------------------------

------
PYTHON
------

Obtenir de l'aide sur une class ou une méthode  (python)
--------------------------------------------------------

    Dans la console Python, saisir  :
        ::
    
            help("nom_de_la_class")

------------------------------------------------------------------------------------------

Lignes de code à insérer au debut de chaque script sous linux
-------------------------------------------------------------

::

#!/usr/bin/env python3
# -*- coding: utf-8 -*-

**N.B :** copier ces lignes entierement sans oublier le "#" devant.

------------------------------------------------------------------------------------------

os library
----------

        **1.1.** Connaitre le repertoitre de travail
        ::
        
            import os
                # on commence par importer la bibliotheque 'os'
            os.getcwd()
                
        **1.2.** Redefinir le repertoir courant
        ::
        
            import os
            os.chdir("mon_rep/de/travail")
                # meme sous windows, il faut remplacer les "\" dans le chemin de
                destination par des "/"
                
                ex : os.chdir("C:/mntJeanCloud/Perso/LAB/Pierre/python/projet/appliActivity")

------------------------------------------------------------------------------------------

pip
---

:Liens web:
            * http://deusyss.developpez.com/tutoriels/RaspberryPi/PythonEtLeGpio/
            * http://www.inspyration.org/tutoriels/utiliser-pip
            * http://sametmax.com/votre-python-aime-les-pip/
                # ce liens montre des exemples d'utilisation de pip

Installation de PIP
~~~~~~~~~~~~~~~~~~~

    **1.1.** Recuperation et installation du packet
    ::
    
        wget https://bootstrap.pypa.io/get-pip.py
            # recuperation du script d'installation
            
        python get-pip.py
            # se placer dans le repertoire d'installation et lancer le script
            # une elevation est peut être necessaire
                    
    **1.2.** Installation depuis apt-get
    ::
    
        sudo apt-get install python3-pip
            # pip sera installer dans le repertoir suivant :
            # /usr/bin/pip3
                
                    
Utilisation de PIP
~~~~~~~~~~~~~~~~~~

    La commande pip s'execute directement dans le shell
    
    **2.1.** Executer pip pour python3 dans un environement linux
    ::
    
        pip-3.2 [une_commande]
                ou
        pip3 [une commande]
    
    **2.2.** obtenir la liste des options
    ::
    
        pip help
            # fonctionne aussi avec pip tout seul
                    
    **2.3.** chercher un paquet
    ::
    
        pip search [nom_du_paquet_rechercher]
            # on peut recherher plusieurs termes en les separent par des espaces
            # ex : pip search py3 numpy
            # attention, la recherche est egalement faite sur
            # les definissions des paquets
                    
    **2.4.** installer un paquet
    ::
    
        pip install [nom_du_paquet_a_installer]

------------------------------------------------------------------------------------------

Les environnements virtuels Python : virtualenv et virtualenvwrapper
--------------------------------------------------------------------

:Liens Web:
            * http://sametmax.com/les-environnement-virtuels-python-virtualenv-et-virtualenvwrapper/

installation des environements virtuels
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

    **1.**  Installation de virtualenv et virtualenvwrapper
    
    N.B : il est préférable de les installer en sudo et non en root (su)
    ::
        
        sudo pip install virtualenv
        sudo pip install virtualenvwrapper

configuration des environements virtuels
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

    **2.1.** Créer un dossier pour les environements virtuels
    
        * Se placer dans le répertoire de l'utilisateur (/home/pi)
        * Créer un dossier pour les environements virtuels
        
    ::
                
            mkdir virtualenv
                
    **2.2.1.**   Editer le fichier .bashrc
    ::
    
            sudo nano .bashrc
                
    **2.2.2.**   renseigner le fichier .bashrc
    ::
    
        *Se placer à la fin du fichier et saisir :
            
            # virtualenvwrapper
            
            export WORKON_HOME=~/virtualenv
                # si le dossier n'a pas été créer au même endroit ou avec le même
                # nom, modifier la ligne précédente en conséquense
                
            mkdir -p $WORKON_HOME
            source  /usr/local/bin/virtualenvwrapper.sh
                # si virtualenvwrapper.sh n'est pas installer au même endroit,
                # adapter le chemin d'accès au fichier
                    
Utilisation environements virtuels
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

    **3.1.** Création d'un nouvel environements virtuel
    ::
        
            mkvirtualenv [nom_de_l_environement] -p /usr/bin/python3.2
                # ex : mkvirtualenv env1 -P /usr/bin/python3.2
                
                # un dossier du nom de votre environement virtuel est alors créer
                # dans le dossier virtualenv créer en section 2.1
                
                # l'option "-p usr/bin/python3.2" permet de configurer l'environements
                # virtuel pour python3. par défaut sur Rpi, c'est python2 qui est 
                # utilisé
                
    **3.2.** Activation / désactivation de l'environment
        Pour être utilisé, un environement doit être activé :
        ::
                    
            workon [nom_de_l_environement]
                    # ex : workon env1
                    
        A la fin de son utilisation, ou pour passer sur un autre environement, il faut
        le désactiver :
        ::
        
            deactivate
                # c'est tout !
                # Attention, ce n'est pas deSactivate, mais bien deactivate sans "S"
                
    **3.3.** supprimer un environement
        ::
    
            rmvirtualenv [nom_de_l_environement]
                # ex : rmvirtualenv env1
                # le dossier de lenvironement sera également supprimer

------------------------------------------------------------------------------------------

Un shell Python qui fait de l'auto completion
---------------------------------------------

    * ipython
    * ipython3 (pour python3)

------------------------------------------------------------------------------------------

convertir un string en bytes
----------------------------
::
 
    b = bytes(mystring, 'utf-8')
                    
------------------------------------------------------------------------------------------

faire un executable à partir d'un script
----------------------------------------

:les softs:
           * py2exe
           * cx_Freeze

La procédure d'utilisation :

:Liens WEB:
            * http://python.developpez.com/faq/?page=Py2exe     
                # tuto pour py2exe
                                                
            * https://www.youtube.com/watch?v=k3VoLjGA6jI
                # video EN sur py2exe
                                                
            * https://pypi.python.org/pypi/py2exe/0.9.2.0/
                # py2exe (soft + install)
                    
            * https://pypi.python.org/pypi?:action=display&name=cx_Freeze&version=4.3.4
                # cx_Freeze (soft)
    
------------------------------------------------------------------------------------------

Fichiers de configuration (.ini)
--------------------------------

:Liens WEB:  
            * http://stackoverflow.com/questions/8884188/how-to-read-and-write-ini-file-with-python
               # exemple util pour comprendre le fonctionnement                                              
            * http://www.marclebrun.be/wiki/doku.php?id=python:fichier_de_configuration_configparser
               # Exemple en francais (python2)
            * http://www.developpez.net/forums/blogs/208887-tyrtamos/b23/simplifier-gestion-fichiers-ini-python/
               # Autre exemple (pytohn3) en francais
            * https://docs.python.org/3.4/library/configparser.html
               # Doc officiel (EN)

------------------------------------------------------------------------------------------

-------------------------------------------
DocUtils ; reStructuredText (.rst) ; Sphinx
-------------------------------------------

DocUtils
--------

:Liens WEB:
            * http://docutils.sourceforge.net/
            
------------------------------------------------------------------------------------------

reStructuredText (.rst)
-----------------------

:Liens WEB:
        * https://fr.wikipedia.org/wiki/ReStructuredText
            # (Definission Wikipedia)

        * https://aful.org/wikis/interop/ReStructuredText
            # Exemple et definission en francais

        * https://mg.pov.lt/restview/
            # api en python permettant de convertir dynamiquement
            les fichiers ".rst" en page Web
            
        * https://github.com/steenhulthin/reStructuredText_NPP            
            # Pour ajouter la syntaxe "reStructuredText" à notePad++
            
        * http://docutils.sourceforge.net/docs/user/rst/quickref.html
            # Un petit guide de reférence

------------------------------------------------------------------------------------------

Sphinx
------

:Liens WEB:
    * http://www.sphinx-doc.org/en/stable/tutorial.html
    
Installer Sphinx
~~~~~~~~~~~~~~~~
    ::
        pip install sphinx
        
Démarrage et initialisation rapide
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    ::
        sphinx-quickstart

------------------------------------------------------------------------------------------

-----
LINUX
-----

rappel des commandes de bases
-----------------------------

:Liens web:
            * http://wiki.linux-france.org/wiki/Les_commandes_fondamentales_de_Linux

        +--------------------------+--------------------------------------------------+
        |    --- Command ---       |      --- Meaning ---                             |
        +==========================+==================================================+
        | ls                       | list files in current directory                  |
        |                          |    # pour afficher la list de tous les éléments, |
        |                          |    même cachés                                   |
        |                          |                                                  |
        |                          |        * ls -a                                   |
        +--------------------------+--------------------------------------------------+
        |cd                        | change directory                                 |
        +--------------------------+--------------------------------------------------+
        | pwd                      | print working directory                          |
        +--------------------------+--------------------------------------------------+
        | rm                       | filename remove filename                         |
        |                          |    # Pour forcer la suppression d'un             | 
        |                          |    # répertoir non vide                          |
        |                          |                                                  |
        |                          |        * rm -Rf monrepertoire                    |
        +--------------------------+--------------------------------------------------+
        | mkdir *directoryname*    | make directory with directoryname                |
        +--------------------------+--------------------------------------------------+
        | rmdir *directoryname*    | remove empty directory                           |
        +--------------------------+--------------------------------------------------+
        | cat textfile             | display contents of textfile in the terminal     |
        +--------------------------+--------------------------------------------------+
        | mv oldfile newfile       | move (rename) oldfile to newfile                 |
        +--------------------------+--------------------------------------------------+
        | cp oldfile newfile       | copy oldfile to newfile                          |
        +--------------------------+--------------------------------------------------+
        | man command              | display manual of command                        |
        +--------------------------+--------------------------------------------------+
        | date                     | read system date/time                            |
        +--------------------------+--------------------------------------------------+
        | echo                     | echo what is typed back in the terminal          |
        +--------------------------+--------------------------------------------------+
        |grep                      | search program that uses regular expressions     |
        +--------------------------+--------------------------------------------------+
        | sudo                     | perform as root user                             |
        +--------------------------+--------------------------------------------------+
        | ./program                | run program                                      |
        +--------------------------+--------------------------------------------------+
        | exit                     | quit terminal session                            |
        +--------------------------+--------------------------------------------------+
        
------------------------------------------------------------------------------------------

rappel des raccourcis de navigation dans le shell
-------------------------------------------------

        +----------------------------+----------------------------------------------+
        |   Key or Key Combination   |                  Function                    |
        +============================+==============================================+
        | Ctrl + A                   | Move cursor to beginning of line             |
        +----------------------------+----------------------------------------------+
        | Ctrl + C                   | Stop currently-executing process             |
        +----------------------------+----------------------------------------------+
        | Ctrl + D                   | Log out—equivalent to typing exit            |
        +----------------------------+----------------------------------------------+
        | Ctrl + E                   | Move cursor to end of line                   |
        +----------------------------+----------------------------------------------+
        | Ctrl + H                   | Delete character in front of cursor          |
        +----------------------------+----------------------------------------------+
        | Ctrl + L                   | Clear terminal                               |
        +----------------------------+----------------------------------------------+
        | Ctrl + R                   | Search command history                       |
        +----------------------------+----------------------------------------------+
        | Ctrl + Z                   | Suspend a program                            |
        +----------------------------+----------------------------------------------+
        | Arrow Left/Right           | Move cursor left/right one character         |
        +----------------------------+----------------------------------------------+
        | Arrow Up/Down              | Scrolls through previous commands            |
        +----------------------------+----------------------------------------------+
        | Shift + PageUp/PageDown    | Move one page up or down in terminal output  |
        +----------------------------+----------------------------------------------+
        | Tab                        | Command or file name completion              |
        +----------------------------+----------------------------------------------+
        | Tab Tab                    | Shows all command or file name possibilities |
        +----------------------------+----------------------------------------------+

------------------------------------------------------------------------------------------

activer le compte root
----------------------
    ::
    
        sudo passwd root

--------------------------------------------------------------------------------

connaitre la version du systeme
-------------------------------

installation de lsb-release
~~~~~~~~~~~~~~~~~~~~~~~~~~~
    ::
    
        apt-get install lsb-release
                    
utilisation de lsb-release
~~~~~~~~~~~~~~~~~~~~~~~~~~
    ::
    
        lsb_release -a
                    
--------------------------------------------------------------------------------

connaitre la version d'un paquet
--------------------------------

installation de apt-show-versions
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    ::
    
        apt-get install apt-show-versions
                    
utilisation de apt-show-versions
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    ::
    
        apt-show-versions *nom_du_paquet*

--------------------------------------------------------------------------------

Pour copier des fichiers en root depuis l'interface graphique
-------------------------------------------------------------

        Installation du logiciel "gksu"
        ::
        
            apt-get install gksu
            
        Ouvrir l'explorateur de fichier.
        dans le menu **"Aide"**, cliquer sur l'item **"A propos"**
        dans la fentre d'information qui s'affiche, relever le nom de l'explorateur
        
            ex : Thunar
            
            
        Dans une fenêtre terminal entrer :
            ::
            
                gksu *nom_de_l_explorateur*
            
            ex : gksu Thunar
            
        L'explorateur de fichier doit s'ouvrir. Un banseau orange vous signal que l'on se
        trouve sur le compte root.

------------------------------------------------------------------------------------------

pour passer la langue et le clavier en francais
-----------------------------------------------

:liens WEB:
            * http://the-raspberry.com/changer-langue-raspberry-pi
            * https://www.raspberrypi.org/forums/viewtopic.php?f=65&t=21700

        **1.**  Changer la langue depuis l'interface de configuration du Pi
        
            * se connecter a l'interface de configuration
                + sudo raspi-config
            
            * Ouvrir le menu "5 Internalisation Options"
            * Ouvrir "I1 Change Locale"
            * Si une langue comme **"en_GB.UTF-8 UTF-8"** est cochee, decochez-la
              en appuyant sur **"Espace"**
            * Cochez la langue **"fr_FR.UTF-8 UTF-8**"
            * Selectioner **"OK"** puis valider
            * Verifier le jeu de parametres regionaux puis valider sur **"OK"**
            * Valider sur "Finish" puis redemarrer
            
        **2.** Modifier manuellement le fichier keyboard
        
            * Editer le fichier keyboard
                + sudo nano /etc/default/keyboard
                
            * remplacer "gb" par "fr"
            
------------------------------------------------------------------------------------------

Pour rendre un fichier "Executable"
-----------------------------------
    ::

            chmod a+x [nomDuFichier]
                    
------------------------------------------------------------------------------------------

Pour pouvoir se connecter en RDP sur un poste Linux
---------------------------------------------------
    ::
    
            sudo apt-get install xrdp

------------------------------------------------------------------------------------------

pour faire du XForwarding
-------------------------

:Liens WEB:
            * http://blog.sckyzo.com/x11-forwarding-en-ssh-via-putty-windows/
            * http://frans-web.com/?p=18
                    
------------------------------------------------------------------------------------------

Pour mettre une IP fixe sur une interfaces réseau
-------------------------------------------------

:Liens Web:
           * http://www.cyberciti.biz/tips/howto-ubuntu-linux-convert-dhcp-network-configuration-to-static-ip-configuration.html

    Ouvrir le fichiers de configuration des interfaces :
    ::
            
            sudo nano /etc/network/interfaces

    Remplacer :
    
    ::
    
                iface eth0 inet dhcp

            par
                iface eth0 inet static
                address 172.16.32.254
                netmask 255.255.255.0
                network 172.16.32.0 (optionel)
                gateway 172.16.32.1 (optionel)

                    
    Redémarrer le réseau
    ::
    
                /etc/init.d/networking restart

------------------------------------------------------------------------------------------

Pour active le WIFI
-------------------

:liens Web:
           * https://wiki.debian.org/fr/WiFi/HowToUse

    Ouvrir le fichiers de configuration des interfaces :
    ::
    
            sudo nano/etc/network/interfaces

    remplacer :
    ::
    
            iface wlan0 inet manual
        
        par             
            iface wlan0 inet dhcp
        
    Redémarrer les interfaces réseau
    ::
    
            ifdown -a && ifup -a

------------------------------------------------------------------------------------------

Se connecter a un reseau wifi en ligne de commande
--------------------------------------------------

:liens Web:
           * http://korben.info/comment-se-connecter-a-un-reseau-wifi-en-ligne-de-commande-sous-linux.html

    Demarer la carte wifi
    ::

        sudo ifconfig wlan0 up
                    
    Rechercher les différents reseau a porter
    ::
    
        iwlist ath0 scan
                    
------------------------------------------------------------------------------------------

Connaitre la liste des matériel usb
-----------------------------------
    ::

            lsusb

------------------------------------------------------------------------------------------

Connaitre l'éspace disque utilise et celui disponible
-----------------------------------------------------
    ::

            df -h
                    
------------------------------------------------------------------------------------------

Les posrts séries
-----------------

:Liens Web:
           * http://www.instructables.com/id/Read-and-write-from-serial-port-with-Raspberry-Pi/

Rappel (equivalence de la notation Windows / Linux
    
    +---------+------------+
    | Windows |    Linux   |
    +=========+============+
    | COM1    | /dev/ttyS0 |
    +---------+------------+
    | COM2    | /dev/ttyS1 |
    +---------+------------+
    | COM3    | /dev/ttyS2 |
    +---------+------------+
    | COM4    | /dev/ttyS3 |
    +---------+------------+
                        
Connaitre la liste des ports série :
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    ::
    
        ls /dev/tty*
            # La commande retourne généralement plus de 50 tty.
            # Cependant, les tty associés au port USB disposent d'une nomenclature différente.
            # Ils contiennent habituellement USB ou ACM (Abstract Control Model)
                        
interoger le journal sur les ports série :
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    ::

        dmesg | grep tty
            # Information plus complète qu'avec l'instruction précédente

------------------------------------------------------------------------------------------

faire du multi-screen  sur une fenêtre terminal
-----------------------------------------------

Installation de screen
~~~~~~~~~~~~~~~~~~~~~~
::

    sudo apt-get install screen
                
Lancer l'application "screen"
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
::

    screen
                
Liste des commandes des bases pour screen
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

    +--------------------------+------------------------------------------------------------+
    | Raccourcis clavier       |                        Fonctions                           |
    +==========================+============================================================+
    | screen                   | Lancer screen                                              |
    +--------------------------+------------------------------------------------------------+
    | CTRL+[a]    --> [c]      | Ouvrir un nouveau screen                                   |        
    +--------------------------+------------------------------------------------------------+
    | CTRL+[a]    --> [espace] | Basculer vers le screen suivant                            |
    +--------------------------+------------------------------------------------------------+
    | CTRL+[a][a]              | Basculer entre le teminal actif et le dernier consulté     |
    +--------------------------+------------------------------------------------------------+
    | CTRL+[a]    --> d        | Détacher la session screen (permet) de fermer la console   |
    |                          | sans arréter les process                                   |
    +--------------------------+------------------------------------------------------------+
    | screen -r                | Se reconnecter à la session screen tel qu'elle était       |
    |                          | lors du détachement avec CTRL[a][d]. On parle de rattacher |
    |                          | le screen                                                  |
    +--------------------------+------------------------------------------------------------+
    | exit                     | Ferme le screen courrant                                   |
    +--------------------------+------------------------------------------------------------+

------------------------------------------------------------------------------------------

pour créer un script qui s'execute au démarrage du sytème
---------------------------------------------------------

Pour faire en sorte qu'un script s'execute au démarrage, il faut 2 éléments distincts :
    * Un script shell placé dans **/etc/init.d**
        # **N.B :** le "d" dans "int.d" signifie : deamon.
        C'est le nom des services sous linux
                                                
        exemple de script : **/etc/init.d/skeleton**
            # Le fichier skeleton, dans linux, est donné a titre de model.
            Il est conseillé de se faire une copie du fichier
            dans ses documents et de travailler à partir de cette exemple
                                                
    * un script (notre code python) placé dans **/usr/sbin**
        # **N.B :** le "s" dans "sbin", signifie : system.
        Le bin repésente les Binnaires,
        c'est à dire les executables.
        Le dossier sbin est donc le dossier
        qui contien les executable du systeme,
        autremant dit les services.
                                                
Préparation du script shell
~~~~~~~~~~~~~~~~~~~~~~~~~~~
    
    **1.** ouvrir une copie du fichier "skeleton". et modifier les ligne suivante :
    
    ::

        #! /bin/sh
        ### BEGIN INIT INFO
        # Provides:          skeleton                   <-- le titre
        # Required-Start:    $remote_fs $syslog
        # Required-Stop:     $remote_fs $syslog
        # Default-Start:     2 3 4 5
        # Default-Stop:      0 1 6
        # Short-Description: Example initscript         <-- description courte
        # Description:       This file should be used   <-- description longue
        #                    to construct scripts to be
        #                    placed in /etc/init.d.
        ### END INIT INFO

        # Author: Foo Bar <foobar@baz.org>              <-- votre nom
        #
        # Please remove the "Author" lines above and replace them
        # with your own name if you copy and modify this script.

        # Do NOT "set -e"

        # PATH should only include /usr/* if it runs after the mountnfs.sh script
        PATH=/sbin:/usr/sbin:/bin:/usr/bin
        DESC="Description of the service"
        NAME=daemonexecutablename                       <-- le nom de votre deamon        
        DAEMON=/usr/sbin/$NAME                          <-- le chemin de votre script si
                                                            ce dernier est different du
                                                            chemin ci contre

        #! /bin/sh
        ### BEGIN INIT INFO
        # Provides:          skeleton
        # Required-Start:    $remote_fs $syslog
        # Required-Stop:     $remote_fs $syslog
        # Default-Start:     2 3 4 5
        # Default-Stop:      0 1 6
        # Short-Description: Example initscript
        # Description:       This file should be used to construct scripts to be
        #                    placed in /etc/init.d.
        ### END INIT INFO

        # Author: Foo Bar <foobar@baz.org>
        #
        # Please remove the "Author" lines above and replace them
        # with your own name if you copy and modify this script.

        # Do NOT "set -e"

        # PATH should only include /usr/* if it runs after the mountnfs.sh script
        PATH=/sbin:/usr/sbin:/bin:/usr/bin
        DESC="Description of the service"
        NAME=daemonexecutablename
        DAEMON=/usr/sbin/$NAME
        DAEMON_ARGS="--options args"
        PIDFILE=/var/run/$NAME.pid
        SCRIPTNAME=/etc/init.d/$NAME

    **2.** après avoir effectuer les modification, enregistrer le fichier
    sous un autre nom (ex : blink_init) dans le dossier :
    
        ::
        
            /etc/init.d/
    
    **3.** depuis le dossier **/etc/init.d**, ouvrir une fenêtre terminale
    et rendre le script executable avec la commande suivante :
    
        ::
    
            chmod a+x [nom_du_script]
            
        ex : chmod a+x blink_init
 
Préparation du script python
~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     
    **1.** Si se n'est pas déjà fait, editer le script et ajouter la ligne suivante
    sur la premiere ligne de votre fichier
    
        ::
        
            #!/usr/bin/env python3

    **2.** Copier le fichier dans le dossier **/usr/sbin/**
    
    **3.** rendre le script executalbe
        ::
        
            chmod a+x [nom_du_script.py]
        
        ex: chmod a+x blink.py

------------------------------------------------------------------------------------------

---
GIT
---

:liens WEB:
            * https://git-scm.com/book/fr/v1/D%C3%A9marrage-rapide-%C3%80-propos-de-la-gestion-de-version
            * https://git-scm.com/book/en/v2
            * https://www.youtube.com/watch?v=rP3T0Ee6pLU&list=PLjwdMgw5TTLXuY5i7RW0QqGdW0NZntqiP
                # Chaine youtube en francais sur l'utilisation de GIT
                
            * https://youtu.be/V6Zo68uQPqE
                # Cours complet un peu long mais en français en claire
                
            * https://git-scm.com/doc
                # documentation

Configurer GIT
--------------

    #.  Les options de base pour la configuration
        ::
        
            git config --global user.name "votre_pseudo"
            git config --global user.email moi@email.com
                # on commence par configurer son nom (user.name)
                # puis son adresse Email (user.email)
                
            git config --global color.diff auto
            git config --global color.status auto
            git config --global color.branch auto
                # Les 3 lignes permettent de mettre le shell en couleur
                
    #. Pour verifier la configuration
        ::
        
            git config --list
    
Obtenir de l'aide
-----------------

    #. les commandes de bases integree a git
        ::
        
            git help
            git help <verbe>
            git <verbe> --help
            man git-<verbe>
        
Démarrer un dépôt Git
---------------------

    #. Initialisation d'un dépôt Git dans un répertoire existant
        ::
        
            git init
            
Enregistrer des modifications dans le dépôt
-------------------------------------------

    #. Vérifier l'état des fichiers
        ::
        
            git status
        
    #. Ajouter les données 
        ::
        
            git add *
    
    #. faire un commit
        ::
        
            git commit -am "votre commentaire"
    
Creer, lister et selectionner une branche
-----------------------------------------

    #. Pour lister une branche
        ::
        
            git branch
                # la branch ayant un asterics est la branche courante
        
    #. Pour creer une nouvelle branch
        ::
            
            git branch [nom de la branch]
    
    #. Pour selectionner et se déplacer sur une branche
        ::
        
            git checkout [nom de la branch]
        
    #. Pour importer des fichiers depuis une autre branch.
        ::
            
            git chekout [branch] [fichier cible]
        
appliquer le contenu d'une branch dans la branch courante (faire un merge)
--------------------------------------------------------------------------
    
    #. Se placer sur la branche de destination
        ::
        
            git checkout [branch cible]
                # ex : git checkout master
        
    #. lancer la commande "merge" en prenant comme argument la branch a appliquer
        ::
            git merge [branch_a_appliquer]
                # ex : git merge dev
                    
suprimer des éléments
---------------------
 
    #. supprimer un fichier dans le repository (l'index)
        ::
        
            git rm --cached [nom_du_fichier]
    
    #. supprimer tous le cache
        ::
        
            git rm -r --cached .
                # ne pas oublier le point
            
    #. réparer l'index si un fichier est supprimer du dossier de travail mais pas de l'index
        ::
        
            git reset
        
    #. supprimer une branch
        ::
        
            git branch -D [nom_de_la_branch]
                # l'option '-D' est l'equivalent de --delete --force
                    
faire un "instantané" puis le libérer
-------------------------------------

    #. faire un instantané
        ::
        
            git stash [nom]
            
    #. Obtenir la list des stash
        ::
        
            git stash list
            
    #. Libérer l'instantané, et le supprimer
        ::
        
            git pop [id du stash (commit) ou son nom]
            
    #. Appliquer l'instantané
        ::
        
            git apply [ID ou nom]
            
annuler / remplacer le dernier commit
-------------------------------------

    #. annuler le dernier commit
        ::
        
            git revert HEAD
            
    #. remplacer le dernier commit par le présent
        ::
    
            git commit --ammend
            
github
------

    #. Ajouter le depot distant "origin"
        ::
        
            git remote add origin [url_de_votre_projet_sur_github]

    #. Pousser la branch locale "master" vers la branch distante "origin"
        ::
        
            git push -u origin master
            
    #. Mettre à jour le depot local depuis le dépot distant
        ::
        
            git pull [nom de la branche]
                # le nom de la branch est optionel si il n'y en a qu'une (origin)

    #. Lister les branch distantes
        * Lister les branch distantes toutes seules
            ::
                
                git remote
                
        * afficher l'url à la suite du nom de la branch
            ::
            
                git remote -v
                
    #. Modifier l'url du dépot distant
    
        * Ouvrir le dossier ".git" que se trouve à la base du dépot local
        * Editer le fichier "config" et modifier la ligne "URL"

------------------------------------------------------------------------------------------

----------------------
Composants Spécifiques
----------------------

Magnetomettre : HMC5883L
------------------------

:liens WEB:
            * http://www.instructables.com/id/Interfacing-Digital-Compass-HMC5883L-with-Raspberr/?ALLSTEPS
                # Instructable (install I2C et test en Python3)
                                                
            * http://think-bowl.com/raspberry-pi/i2c-python-library-3-axis-digital-compass-hmc5883l-with-the-raspberry-pi/
                # Exemple de mise en oeuvre + list des fonctions
                    
            * http://www51.honeywell.com/aero/common/documents/myaerospacecatalog-documents/Defense_Brochures-documents/HMC5883L_3-Axis_Digital_Compass_IC.pdf
                # Datasheet du composant
                                                
            * https://www.sparkfun.com/products/10530
                # fiche produit Sparkfun (arduino)
    
Implentation HMC5883L
~~~~~~~~~~~~~~~~~~~~~
    
    La sérigraphie est masqué lorsque le magnétometre est enfiché dans une breadbord.
    L'implentation si dessous est donc présenter en **vue de dessus (donc sérigraphie cachée)**
    
        ::
        
            Haut
                3v3
                DRDY
                SDA
                SCL
                GND
                VCC_+5v
            Bas
    
Installation des librairies quick2wire et i2clibraries
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

        **1.1.** Préparation :
            Si ce n'est pas déjà fait, il faut installer les outils Python :
            
            ::
            
                sudo apt-get update
                sudo apt-get upgrade
                sudo apt-get install i2c-tools
                sudo apt-get install python3-smbus
                     # Quick2wire.i2c peut aussi être utilisé our l'i2c
                    
                sudo apt-get install python3
                sudo reboot
                    
        **1.2.** l'installation et configuations des librairies et outils Quick2wire
            **N.B :** le lignes qui suivent sont copiées telles quelles depuis la page instructables
            
            Se positionner à l'endroit ou l'on veut installer quick2wire
                ::
                
                    git clone https://github.com/quick2wire/quick2wire-python-api.git
                        #get quick2wire from github.com

                        #if don't have git, try "sudo apt-get install git"

                    mv ./quick2wire-python-api ./code
                        # renaming the quick2wire library folder to code for tidiness, 
                        # you can skip this if you prefer keeping it original

                    nano setup.env 
                        # create a setup file, basically to point out where the quick2wire library is
                        # situated for your python
                        # after this line, terminal will enter text editing mode, type in these lines

                    export QUICK2WIRE_API_HOME=~/project/code
                        #change the directory address if different than what i'm using
                        #export PYTHONPATH=$PYTHONPATH:$QUICK2WIRE_API_HOME

                    after that CTRL+X, Y, ENTER to quit, save and overwrite

                    back in terminal mode

                    . ./quick2wire.env 
                        # run the environment setup, run this once every time after reboot,
                        # running twice will append the address directory
                        # for checking, use "env |grep quick2wire",
                        # address shown must be the same with the directory where 
                        # you install your quick2wire library

                    cd code
                        #go into the quick2wire folder, this will be where you put your python code

                    git clone https://bitbucket.org/thinkbowl/i2clibraries.git
                        #getting library files containing functions for i2c devices such as HMC5883L,
                        #ITG-3205, ADXL345 and LCD

                    Now you can shut it down with "sudo shutdown -h now" so that we can do the wiring
                                
Configuration du HMC5883L
~~~~~~~~~~~~~~~~~~~~~~~~~

        **2.1.** la déclinaison terrestre
            Pour pouvoir être le plus précis possible, il faut recalibrer la boussole en tenant compte
            de notre décallage par rapport au pole magnétique. On appel ça : **"la déclinaison terrestre"**
            Pour cela on à besoin de nos coordonées (les coordonées du LAB):
            
                * Longitude :  49° 1'22.48"N
                * Latitude  :   2° 1'50.51"E
            
            se qui donne à la date du 18/08/2015 : 0° 9,24'
                        
                        
------------------------------------------------------------------------------------------

Motteur Pas à Pas : 28BYJ-48
----------------------------

**N.B :** se PAP doit être piloté par un driver comme le UNL2003

Specification du PAP
~~~~~~~~~~~~~~~~~~~~

    +---------------------------------------+----------------+
    | angle par pas (moteur)                |  5.625°        |
    +---------------------------------------+----------------+
    | Nbe de pas / tours (moteur)           | 64 (360/5.625) |
    +---------------------------------------+----------------+
    | ratio (demultiplicateur)              | 1/64           |
    +---------------------------------------+----------------+
    | angle par pas (en sortie d'abre)      | 0.087890625°   |
    +---------------------------------------+----------------+
    | Nbe de pas / tour (en sortie d'arbre) | 4096           |
    +---------------------------------------+----------------+

Correspodanse entre le driver et les GPIO
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    
        +------------+-------------------------+
        | BCM (GPIO) | Serigraphie sur UNL2003 |
        +============+=========================+
        |  GPIO17    |           N1            |
        +------------+-------------------------+
        |  GPIO18    |           N2            |
        +------------+-------------------------+
        |  GPIO27    |           N3            |
        +------------+-------------------------+
        |  GPIO22    |           N4            |
        +------------+-------------------------+
        
Phases
~~~~~~
        +-----------------+---+---+---+---+---+---+---+----+
        |                 | ==> CW Direction (1-2 Phase )  |
        +-----------------+---+---+---+---+---+---+---+----+
        | lead Wire color | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8  |
        +-----------------+---+---+---+---+---+---+---+----+
        | 4 orange        | x | x |   |   |   |   |   | x  |
        +-----------------+---+---+---+---+---+---+---+----+
        | 3 yelow         |   | x | x | x |   |   |   |    |
        +-----------------+---+---+---+---+---+---+---+----+
        | 2 pink          |   |   |   | x | x | x |   |    |
        +-----------------+---+---+---+---+---+---+---+----+
        | 1 blue          |   |   |   |   |   | x | x | x  |
        +-----------------+---+---+---+---+---+---+---+----+
            
        **N.B :** les 8 phases donnent 1 tour complet sur le moteur,
            soit 1/64 de tour en sortie d'arbre.
            
Organisation des phases en python3
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        ::
        
            # Séquense de sortie
            ndp = 8
            phase = list(range(ndp))
            phase[0] = [1,0,0,0]
            phase[1] = [1,1,0,0]
            phase[2] = [0,1,0,0]
            phase[3] = [0,1,1,0]
            phase[4] = [0,0,1,0]
            phase[5] = [0,0,1,1]
            phase[6] = [0,0,0,1]
            phase[7] = [1,0,0,1]
                    
        **N.B :** la liste contenu dans chaque phase, correspond à l'état
            (1 = Hight = True ; 0 = Low = False) à appliquer sur le broches du GPIO
                
            ::
        
                ex  : phase[0] = [1,0,0,0]
                    --> GPIO17 = 1
                    --> GPIO18 = 0
                    --> GPIO27 = 0
                    --> GPIO22 = 0

------------------------------------------------------------------------------------------

Picamera
--------

:liens WEB:
        * http://www.framboise314.fr/picamera-pour-piloter-integralement-la-camera-de-votre-raspberry-pi-en-python/
        * http://picamera.readthedocs.org/en/release-1.0/quickstart.html
            # Quick Start
                                    
        * http://picamera.readthedocs.org/en/release-1.0/recipes1.html
            # CookBook
                
Activation du module caméra sur le RPi
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

    **1.1.** se connecter au module de configuration
        ::
        
            * sudo raspi-config
            
    **1.2.** faire la séquence suivante
        ::
        
            "5 Enable Camera" -> [Entré]
                    --> <Enable> -> [Entré]
                    --> <Finish> -> [Entré]
                    --> <Oui> -> [Entré]
                    
installation de la camera
~~~~~~~~~~~~~~~~~~~~~~~~~

        **2.**   Insérer la limende dans le ports situé au niveau du port HDMI.
        
            **N.B :** la partie métallique doit être en direction du port HDMI

                    
Instalation de la librairie PiCamera
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

        **3.** Faire les mises à jour système de rigueur puis
            ::
            
                sudo apt-get install python3-picamera
            
utilisation avec python
~~~~~~~~~~~~~~~~~~~~~~~
            ::
            
                import picamera
                
------------------------------------------------------------------------------------------

Capteur ultrason : HC-SR04
--------------------------

:Liens Web:
            * https://youtu.be/xACy8l3LsXI
            * http://www.modmypi.com/blog/hc-sr04-ultrasonic-range-sensor-on-the-raspberry-pi
             
Vocabulaire et definission pour le HC-SR04
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

    :Trig:
        En Sortie (hautparleur - Trig)
            # 1 impulsion est egale a 10us (0.00001)
                    
    :Echo:
        En Entree (Micro - Echo)
        
            # Attention les entrée du RPi etant en 3.3v,
            il faut faire un pont diviseur entre la broche
            "Echo" et le GND pour pouvoir se brancher
            sur le RPi
                
    :Vitesse du son:
        Le son se déplace à une vitesse d'environ 343 m/s (à température ambiante de 20°),
        soit environ 34300 cm/s
            
            
                
    :Distance:
        D = 17150 x time
            # 17150 correspond a la vitesse du son / 2 (34300/2).
            On divise par 2 car seule la distance en l'obstacle et le mur nous intéresse
            et non la distance total parcourue par l'onde radio.
            
Specification du HC-SR04
~~~~~~~~~~~~~~~~~~~~~~~~

    :Alimentation:
        5 V
        
    :porté:
        2 cm à 500 cm
        
    :Résolution:
        0.3 cm
        
    :Fréquence:
        40 kHz
